from datetime import datetime, timedelta
import logging
from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from bot.database.methods.get import get_all_user, get_all_subscription, get_payments
from bot.misc.language import get_lang
from bot.filters.main import IsAdmin
from bot.keyboards.reply.admin_reply import admin_menu

log = logging.getLogger(__name__)

statistics_router = Router()
statistics_router.message.filter(IsAdmin())

@statistics_router.message(F.text == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üìä")
async def show_statistics(message: Message, state: FSMContext) -> None:
    """Show bot statistics to admin"""
    try:
        # Get all users
        all_users = await get_all_user()
        total_users = len(all_users)
        
        # Get new users in last 30 days
        thirty_days_ago = datetime.now() - timedelta(days=30)
        new_users_30d = len([u for u in all_users if u.date_reg and u.date_reg > thirty_days_ago])
        
        # Get new users today
        today = datetime.now().date()
        new_users_today = len([u for u in all_users if u.date_reg and u.date_reg.date() == today])
        
        # Get active subscriptions
        active_subs = await get_all_subscription()
        active_subs_count = len(active_subs)
        
        # Calculate earnings
        payments = await get_payments()
        total_earnings = sum(p.amount for p in payments) if payments else 0
        today_earnings = sum(p.amount for p in payments if p.data and p.data.date() == today) if payments else 0
        
        # Format statistics message
        stats_msg = (
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n\n"
            f"üìà –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
            f"üìÖ –ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ 30 –¥–Ω–µ–π: {new_users_30d}\n"
            f"üóì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –¥–µ–Ω—å: {new_users_today}\n\n"
            f"üü¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: {active_subs_count}\n\n"
            f"üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {today_earnings:.2f}‚ÇΩ\n"
            f"üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: {total_earnings:.2f}‚ÇΩ"
        )
        
        # Send statistics
        await message.answer(stats_msg)
        
        # Return to admin menu
        lang = await get_lang(message.from_user.id)
        await message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=await admin_menu(lang)
        )
        
    except Exception as e:
        log.error(f"Error in statistics handler: {e}", exc_info=True)
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
